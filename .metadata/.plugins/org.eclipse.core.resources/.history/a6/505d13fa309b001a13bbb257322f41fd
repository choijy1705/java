package game1;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ShootingGame {

	public static void main(String[] args) {
		game_Frame fms = new game_Frame();
		

	}
}


class game_Frame extends JFrame implements KeyListener, Runnable{
	
	int f_width = 800;
	int f_height = 600;
	
	int x,y;
	
	boolean keyUp = false;
	boolean keyDown = false;
	boolean keyLeft = false;
	boolean keyRight = false;
	
	Thread th;
	
	Toolkit tk = Toolkit.getDefaultToolkit();
	Image me_img = tk.getImage("C:\\Users\\cjy17\\Desktop\\Solution\\practice\\src\\game1\\f15k.png");
	
	Image buffImage; //더블 버퍼링용
	Graphics buffg; //더블 버퍼링용
	
	game_Frame(){
		init();
		start();
		
		setTitle("슈팅 게임 만들기");
		setSize(f_width, f_height);
		
		Dimension screen = tk.getScreenSize();
		
		int f_xpos = (int)(screen.getWidth()/2 - f_width/2);
		int f_ypos = (int)(screen.getHeight()/2 - f_height/2);
		
		setLocation(f_xpos, f_ypos);
		setResizable(false);
		setVisible(true);
	}

	

	public void init() {
		x = 100;
		y = 100;
		
	}
	
	public void start() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		addKeyListener(this);
		th = new Thread(this);
		th.start();
		
	}
	
	public void run() {
		try {
			while(true) {
				KeyProcess();
				repaint();
				Thread.sleep(20);
			}
		}catch(Exception e) {
			
		}
	}
	
	public void paint(Graphics g) {
		
		buffImage = createImage(f_width, f_height);
		//더블 버퍼링 버퍼 크기를 화면크기와 같게 설정
		buffg = buffImage.getGraphics();
		
		update(g);
		
	}
	
	public void updata(Graphics g) {
		Draw_Char(); // 실제로 그려진 이미지를 가져온다
		
		g.drawImage(buffImage, 0,0,this);
	}

	private void Draw_Char() {
		buffg.clearRect(0,0,f_width,f_height);
		buffg.drawImage(me_img,x ,y ,this);		
	}



	@Override
	public void keyTyped(KeyEvent e) {}

	@Override
	public void keyPressed(KeyEvent e) {
		switch(e.getKeyCode()) {
		case KeyEvent.VK_UP :
			
			keyUp=true;
			break;
		case KeyEvent.VK_DOWN :
			keyDown=true;
			break;
		case KeyEvent.VK_LEFT :
			keyLeft=true;
			break;
		case KeyEvent.VK_RIGHT :
			keyRight=true;
			break;		
		}		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		switch(e.getKeyCode()) {
		case KeyEvent.VK_UP :
			keyUp=false;
			break;
		case KeyEvent.VK_DOWN :
			keyDown=false;
			break;
		case KeyEvent.VK_LEFT :
			keyLeft=false;
			break;
		case KeyEvent.VK_RIGHT :
			keyRight=false;
			break;		
		
		}
		
	}
	
	public void KeyProcess() {
		
		if(keyUp == true) y -= 	5;
		if(keyDown == true) y += 5;
		if(keyLeft == true) x -= 5;
		if(keyRight == true) x += 5;
			
	}
	
}

