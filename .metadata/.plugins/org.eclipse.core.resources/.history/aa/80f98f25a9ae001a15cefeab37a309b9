package SWexpert;

import java.util.*;
class Solution {
	static Scanner sc = new Scanner(System.in);
	static int N;
	static boolean[][] visit;
	static int cnt;
	static List<Integer> list = new ArrayList<>();
	static int land;
	
	public static void main(String[] args) throws Exception {
		N = sc.nextInt();
		String[][] map = new String[N][N];
		visit = new boolean[N][N];
		cnt = 0;
		
		for(int i=0;i<N;i++){
			map[i] = sc.next().split("");
			System.out.println(map[i]);
		}
		
		for(int i=0;i<N;i++){
			for(int j=0;j<N;j++){
				land = 0;
				if(map[i][j].equals("L") && !visit[i][j]){
					visit[i][j] = true;
					land++;
					findaround(i,j,map);
					System.out.print(land);
					list.add(land);
				}
			}
		}
		
		Collections.sort(list);
		list.remove(list.size()-1);
		
		if(list.size() == 0){
			System.out.println("0 0 0.00 0");
		}else{
			double sum = 0.0;
			double avg = sum/list.size();
			double mid = 0;
			if(list.size()%2 == 0){
				double s = (list.get(list.size()/2 -1) + list.get(list.size()/2))/2;
				mid = Math.round(s*100)/100;
			}else{
				mid = list.get(list.size()/2);
			}

			System.out.println(list.get(list.size()-1) + " " + list.get(0) + " " + Math.round(avg*100)/100.0 + " " + mid);
		
		}
		
	}
	
	static void findaround(int x, int y, String[][] map){
		
		if(map[x+1][y].equals("L") && !visit[x+1][y]){
			land++;
			visit[x+1][y] = true;
			findaround(x+1,y,map);
		}
		if(map[x][y+1].equals("L") && !visit[x][y+1]){
			land++;
			visit[x][y+1] = true;
			findaround(x,y+1,map);
		}
	}
}